[1mdiff --git a/src/ucp/core/ucp_worker.c b/src/ucp/core/ucp_worker.c[m
[1mindex 5adcee9..060765a 100644[m
[1m--- a/src/ucp/core/ucp_worker.c[m
[1m+++ b/src/ucp/core/ucp_worker.c[m
[36m@@ -1853,6 +1853,7 @@[m [mucp_worker_print_used_tls(ucp_worker_h worker, ucp_worker_cfg_index_t cfg_index)[m
     ucs_string_buffer_rtrim(&strb, "; ");[m
 [m
     ucs_info("%s", ucs_string_buffer_cstr(&strb));[m
[32m+[m[32m    printf("%s\n", ucs_string_buffer_cstr(&strb));[m
 }[m
 [m
 static ucs_status_t ucp_worker_init_mpools(ucp_worker_h worker)[m
[36m@@ -2042,6 +2043,7 @@[m [mucs_status_t ucp_worker_get_ep_config(ucp_worker_h worker,[m
     ucp_lane_index_t tag_exp_lane;[m
     unsigned tag_proto_flags;[m
     ucs_status_t status;[m
[32m+[m[32m    ucp_config_t *config;[m
 [m
     ucs_assertv_always(key->num_lanes > 0,[m
                        "empty endpoint configurations are not allowed");[m
[36m@@ -2101,6 +2103,8 @@[m [mucs_status_t ucp_worker_get_ep_config(ucp_worker_h worker,[m
                                         UCP_PROTO_FLAG_AM_SHORT, key->am_lane,[m
                                         &ep_config->am_u.max_eager_short);[m
     } else {[m
[32m+[m[32m        ucp_config_read(NULL, NULL, &config);[m
[32m+[m[32m        ucp_config_print(config, stdout, NULL, UCS_CONFIG_PRINT_TLS);[m
         ucp_worker_print_used_tls(worker, ep_cfg_index);[m
     }[m
 [m
[1mdiff --git a/src/ucs/config/parser.c b/src/ucs/config/parser.c[m
[1mindex a13d508..241e6e8 100644[m
[1m--- a/src/ucs/config/parser.c[m
[1m+++ b/src/ucs/config/parser.c[m
[36m@@ -1856,6 +1856,7 @@[m [mvoid ucs_config_parser_print_opts(FILE *stream, const char *title, const void *o[m
 {[m
     ucs_config_parser_prefix_t table_prefix_elem;[m
     UCS_LIST_HEAD(prefix_list);[m
[32m+[m[32m    char str[100];[m
 [m
     if (flags & UCS_CONFIG_PRINT_DOC) {[m
         fprintf(stream, "# UCX library configuration file\n");[m
[36m@@ -1878,8 +1879,9 @@[m [mvoid ucs_config_parser_print_opts(FILE *stream, const char *title, const void *o[m
     }[m
 [m
     // TODO: PP-HW-UCX[m
[31m-    if (flags /*& UCS_CONFIG_PRINT_TLS*/) {[m
[31m-[m
[32m+[m[32m    if (flags & UCS_CONFIG_PRINT_TLS) {[m
[32m+[m[32m        ucs_config_parser_get_value((void *)opts, fields, "TLS", str, 100 * sizeof(char));[m
[32m+[m[32m        fprintf(stream, "UCX_TLS=%s\n", str);[m
     }[m
 [m
     if (flags & UCS_CONFIG_PRINT_HEADER) {[m
[1mdiff --git a/src/ucs/config/types.h b/src/ucs/config/types.h[m
[1mindex c300a6b..cf2c72a 100644[m
[1m--- a/src/ucs/config/types.h[m
[1m+++ b/src/ucs/config/types.h[m
[36m@@ -90,7 +90,8 @@[m [mtypedef enum {[m
     UCS_CONFIG_PRINT_HEADER          = UCS_BIT(1),[m
     UCS_CONFIG_PRINT_DOC             = UCS_BIT(2),[m
     UCS_CONFIG_PRINT_HIDDEN          = UCS_BIT(3),[m
[31m-    UCS_CONFIG_PRINT_COMMENT_DEFAULT = UCS_BIT(4)[m
[32m+[m[32m    UCS_CONFIG_PRINT_COMMENT_DEFAULT = UCS_BIT(4),[m
[32m+[m[32m    UCS_CONFIG_PRINT_TLS             = UCS_BIT(5)[m
 } ucs_config_print_flags_t;[m
 [m
 [m
[1mdiff --git a/test/run.batch b/test/run.batch[m
[1mindex b944906..59143fe 100644[m
[1m--- a/test/run.batch[m
[1m+++ b/test/run.batch[m
[36m@@ -5,7 +5,7 @@[m
 #SBATCH --ntasks=2[m
 #SBATCH --time=00:01:00[m
 #SBATCH --mem=1000[m
[31m-#SBATCH --partition=test[m
[32m+[m[32m#SBATCH --partition=apollo-cpu[m
 [m
 module load openmpi/4.1.6[m
 [m
[36m@@ -16,4 +16,4 @@[m [mld_preload_paths=$(find "$ucx_lib_directory" -name 'libucp.so.0' -o -name 'libuc[m
 echo $ld_preload_paths[m
 [m
 #srun --export LD_PRELOAD=${ld_preload_paths}:${LD_PRELOAD} /home/ta/willian/osu/osu-micro-benchmarks-7.3/c/mpi/pt2pt/standard/osu_latency[m
[31m-srun --export LD_PRELOAD=${ld_preload_paths}:${LD_PRELOAD} $HOME/UCX-lsalab/test/mpi/osu/pt2pt/standard/osu_latency[m
[32m+[m[32msrun --export LD_PRELOAD=${ld_preload_paths}:${LD_PRELOAD},UCX_TLS=ud_verbs $HOME/UCX-lsalab/test/mpi/osu/pt2pt/osu_latency[m
